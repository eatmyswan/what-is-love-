$('.filters_wrap a').removeClass('active');
$('#week').addClass('active');
$('#pad').replaceWith("<%= escape_javascript render('plan')  %>");
$('.categories_wrap').replaceWith("<%= escape_javascript render('side_forecast')  %>");



$(document).ready(function() {
	
	$('#datepicker').datepicker('setDate',"<%= @start_date %>");
	
	$('#datepicker .droppable').droppable({
		accept: '.task_wrap',
		tolerance: 'pointer',
		over: function(event,ui){
			$('.dragging_task').css('opacity',0.3);
			$(this).addClass('ui-datepicker-over');
			$('.category').droppable('disable');
			$('.wc-day-column-inner').droppable('disable');
			$('.day_drop').droppable('disable');
		},
		out: function(event,ui){
			$(this).removeClass('ui-datepicker-over');
			$('.category').droppable('enable');
			$('.wc-day-column-inner').droppable('enable');
			$('.day_drop').droppable('enable');
		},
		drop: function(event,ui){
			$('.category').droppable('enable');
			$('.wc-day-column-inner').droppable('enable');
			$('.day_drop').droppable('enable');
			
			var taskId = ui.draggable.attr('id');
			var date = $(this).attr('title');
			$('#cal_date').val(date);
			$('#cal_taskId').val(taskId);
			
			var left = ui.position.left - 90;
			var top = ui.position.top - 140;
			
			if((left + 220) > $(document).width()) {
				left = $(document).width() - 250;
			}

			$('#cal_popup').css({
				'top' : top,
				'left' : left
			}).show();
			
			if($('#plan_wrap').length == 1) {
				 $('ul.sortable').sortable('cancel');
			}
			if($('#capture_wrap').length == 1) {
				$('ul.sortable').sortable('cancel');
				ui.draggable.remove();
				calculateResultCount();
			}
			if($('#day_plan_wrap').length == 1) {
				ui.draggable.remove();
				calculateResultCount();
			}
		}
	});
	

	calculateMinD();
	calculateAddedCount();
	
	$("#day_plan_wrap li.task_wrap.outcome_ready").addClass('outcome');
	$("#day_plan_wrap li.task_wrap.outcome_ready > .header").show();
	
	$("#day_plan_wrap li.task_wrap.outcome").each(function(){
		var pHeight = $(this).find('.purpose').height() + 30;
		var rHeight = $(this).find('.result_text').height() + 10;
		var height = pHeight > rHeight ? pHeight : rHeight;
		height = height > 26 ? height : 26;
		$(this).find('ul.action_plan').css({ 'min-height': height });
	});

	$('ul.day_drop').droppable({
		accept: '.task_wrap',
		tolerance: 'pointer',
		over: function(event,ui){
			$('.dragging_task').css('opacity',0.3);
			$(this).addClass('day_drop_over');
		},
		out: function(event,ui){
			$(this).removeClass('day_drop_over');
		},
		drop: function(event,ui){
			var taskId = ui.draggable.attr('id');
			var date = $(this).attr('date');

			if(ui.draggable.parents('#day_plan_wrap').length === 0){
				$(ui.draggable).prependTo(this);
				var nothing = 'true';
				open = 'true';
			} else {
				
				var id = $(ui.draggable).attr('id');
				$('#week_committed').find('#'+id).remove();
				var clone = $(ui.draggable).clone();
				clone.find('.action_plan').html('');
				if(ui.draggable.parents('.action_plan').length != 0){
					var sort = parseInt(clone.find('.task_number').text());
					var pSort = parseInt(ui.draggable.parents('.outcome').find('.task_number').first().text());
					clone.find('.task_number').text(pSort+'.'+sort);
				}
				clone.prependTo(this).addClass('committed').removeClass('outcome').find('.header').hide();
				
				
				open = ui.draggable.hasClass('outcome_ready') ? 'true' : 'false';
				var nothing = 'false';
				
			}

			$.ajax({
				url: "/tasks/" + taskId,
				type: 'PUT',
				data: $.param({task : { start: date, committed: 'true', scheduled: 'false', week: 'false', readOnly: 'false' }, open: open, nothing: nothing }),
				success: function(){
					$('.day_drop_over').removeClass('day_drop_over');
					calculateMinD();
					calculateAddedCount();
				}
			});
		}
	});
	
function calculateMinD(){
	$('.day_drop').each(function(){
		
		var minD = 0;
		var minDTotal = 0;
	
		$(this).find('.task_wrap').each(function(){
			if(!$(this).hasClass('complete')){
				if($(this).hasClass('must')) { 
					min_duration = $(this).attr('min_duration') == '0' ? 60 : parseInt($(this).attr('min_duration'))
					minD = min_duration + minD;
				}
				min_duration = $(this).attr('min_duration') == '0' ? 60 : parseInt($(this).attr('min_duration'))
				minDTotal = min_duration + minDTotal;
			}
		});
		
		$(this).find('.appt_wrap').each(function(){
			if(!$(this).hasClass('complete')){
				minD = parseInt($(this).attr('min_duration')) + minD;
				minDTotal = parseInt($(this).attr('min_duration')) + minDTotal;
			}
		});

		var hour = parseInt(minD/60).toString();
		var min = parseInt(minD%60).toString();
		hour = (hour.length == 1) ? '0'+hour : hour;
		min = (min.length == 1) ? '0'+min : min;

		var hourTotal = parseInt(minDTotal/60).toString();
		var minTotal = parseInt(minDTotal%60).toString();
		hourTotal = (hourTotal.length == 1) ? '0'+hourTotal : hourTotal;
		minTotal = (minTotal.length == 1) ? '0'+minTotal : minTotal;

		$(this).parent().find('.must_wrap .time').first().text(hour+':'+min);
		$(this).parent().find('.total_wrap .time').first().text(hourTotal+':'+minTotal);
	});
}

function calculateAddedCount(){
	var outcomeCount = $('#week_committed .task_wrap.outcome_ready').length;
	$('.result_count_wrap .outcome_count').text(outcomeCount);
	var count = $('#week_committed .task_wrap').length + $('#week_committed .appt_wrap').length - outcomeCount;
	$('.result_count_wrap .action_count').text(count);
}
	

});