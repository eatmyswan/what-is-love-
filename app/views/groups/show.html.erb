
<h1> <%= @group.title %> </h1>


<%= render :partial => '/tasks/form', :locals => {:group => @group} %>
<%= render :partial => 'sub_nav', :locals => {:groups => @groups} %>
<%= render :partial => '/tasks/tasks', :locals => {:tasks => @tasks} %>
<div class="poof" style="background-position: 0 0"></div> 

<br><br>

<div id="blocks-list">
	<% @blocks.each do |block| %>
		<div id="block_<%= block.id %>" class="block_wrap">
			<div class="block_drag">
				<div class="block_title">
					<%= link_to '', block_path(block), :method => :delete, :class => 'delete', :confirm => 'Are you sure?' %>
					<h2 class="block_title_tasks">Massive Action Plan</h2>
					<h2 class="block_title_outcome">Result / Outcome</h2>
					<h2 class="block_title_purpose">Purpose</h2>
				</div>
				<div class="block_body">
					<div class="tasks"> 
						<div class="task_padding">
						<% total_time = 0 %>
						<% must_time = 0 %>
						<% block.tasks.order_by([:sort, :asc]).each_with_index do |task, index| %>
						<% total_time = total_time + task.duration if task.duration && task.complete == false %>
						<% must_time = must_time + task.duration if task.duration && task.must == true && task.complete == false %>
							<%= render :partial => '/tasks/task_dark', :locals => {:task => task, :index => index} %>
						<% end %>
						</div>
						<%= form_for(Task.new) do |f| %>
							<%= f.text_field :task, :autocomplete => :off, :id => "task_task_#{block.id}", :value => "New task...", :onfocus => '(this.value == "New task...") ? this.value = "" : this.value', :onblur => '(this.value == "") ? this.value = "New task..." : this.value' %>
							<%= f.hidden_field :block_id, :value => block.id %>
							<%= f.hidden_field :group_id, :value => @group.id %>
							<%= f.hidden_field :sort, :value => '99' %>
						<% end %>
					</div>
					<div class="outcome"> 
						<div class="outcome_padding">
							<%= editable_field block, :outcome, { :event => "dblclick", :onblur => "cancel", :width => "none", :height => "none"} %>
							<div class="min_max_time">
								<strong>Must:</strong> 
									<span class="must_time"><%= must_time %> </span>  min <br> 
								<strong>Total:</strong> 
									<span class="total_time"> <%= total_time %> </span> min
							</div>
						</div>
					</div>
					<div class="purpose"> 
						<div class="purpose_padding">
						<%= editable_field block, :purpose, { :event => "dblclick", :onblur => "cancel", :width => "none", :height => "none" } %>
						</div>
					</div>
				</div>
			</div>
		</div>
	<% end %>
</div>

<% content_for :javascript do %>
  <%= javascript_tag do %>

		$(".group").droppable({
			tolerance: 'pointer',
			drop: function(event, ui) {
				if(ui.draggable.attr("id").indexOf("task") != -1) {
					ui.draggable.hide();
					var group_id = this.id.split('_')[1];
					var item_id = ui.draggable.attr("id").split('_')[1];
					$.ajax({
	                type: 'post', 
	                data: {task: {group_id: group_id}}, 
	                dataType: 'script', 
	                complete: function(request){ },
	                url: "/task/update/"+item_id})
	       } else if (ui.draggable.attr("id").indexOf("block") != -1) {
						ui.draggable.hide();
						var group_id = this.id.split('_')[1];
						var block_id = ui.draggable.attr("id").split('_')[1];
						$.ajax({
		                type: 'post', 
		                data: {block: {group_id: group_id}}, 
		                dataType: 'script', 
		                complete: function(request){ },
		                url: "/block/update/"+block_id})
					 }
			}
		});

	
     $('#tasks-list').sortable(
        {
          dropOnEmpty: false, 
          handle: '.task_drag', 
          items: '.task_wrap',
          opacity: 0.4,
          scroll: true,
          update: function(){
            $.ajax({
                type: 'post', 
                data: $(this).sortable('serialize')+'&group_id='+$(this).attr('gid'), 
                dataType: 'script', 
                complete: function(request){ 
									$('#tasks-list').children().each(function(index, div){
										$("#"+div.id+ " .task_count").html(index + 1);
									});
								},
                url: '/tasks/sort_tasks'})
            }
         });

     $('#blocks-list').sortable(
        {
          dropOnEmpty: false, 
          handle: '.block_drag', 
          items: '.block_wrap',
          opacity: 0.4,
          scroll: true,
          update: function(){
            $.ajax({
                type: 'post', 
                data: $(this).sortable('serialize'), 
                dataType: 'script', 
                complete: function(request){ },
                url: '/blocks/sort_blocks'})
            }
         });

     $('.task_padding').sortable(
        {
          dropOnEmpty: false, 
          handle: '.task_drag', 
          items: '.task_wrap',
          opacity: 0.4,
          scroll: true,
          update: function(){
            $.ajax({
                type: 'post', 
                data: $(this).sortable('serialize'), 
                dataType: 'script', 
                complete: function(request){
										$('.task_padding').children().each(function(index, div){
										$("#"+div.id+ " .task_count_dark").html(index + 1);
									});
								},
                url: '/tasks/sort_tasks'})
            }
         });
    <% end %>
<% end %>