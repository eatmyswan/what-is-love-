$('.filters_wrap a').removeClass('active');
$('#day').addClass('active');
$('#pad').replaceWith("<%= escape_javascript render('schedule')  %>");
$('.categories_wrap').replaceWith("<%= escape_javascript render('side')  %>");

<% if @size.to_i == 10 %>
	$('#max_cal').removeClass('active');
	$('#min_cal').addClass('active');
<% end %>

$(document).ready(function() {

   var $calendar = $('#schedule');
	var now = new Date();
	
	$calendar.weekCalendar({
		date: new Date(parseInt("<%= @start_date.year %>"),parseInt("<%= @start_date.month %>")-1,parseInt("<%= @start_date.day %>"),now.getHours()),
		displayOddEven:true,
		timeslotsPerHour : 4,
		timeslotHeight : parseInt("<%= @size %>"),
		allowCalEventOverlap : true,
		overlapEventsSeparate: true,
		firstDayOfWeek : 1,
		businessHours :{start: 8, end: 18, limitDisplay: false },
		alwaysDisplayTimeMinutes: false,
		daysToShow : 1,
		useShortDayNames: true,
		headerSeparator: ' ',
		timeSeparator: ' - ',
		timeFormat: 'h:ia',
		switchDisplay: {'day': 1, 'week': 7},
		title: function(daysToShow) {
			return daysToShow == 1 ? '<span class="big">%day%</span> <span class="small">%date%</span>' : '<span class="big">%start% - %end%</span>';
		},
		calendarAfterLoad: function($calendar){
			calculateMinD();
		},
		changedate: function($calendar, newDate){
			$('#day_capture').attr('href','/day/capture/'+dbDate(newDate));
			$('#day_plan').attr('href','/day/plan/'+dbDate(newDate));
			$('#day_schedule').attr('href','/day/schedule/'+dbDate(newDate));
			$('#hidden_date').val(dbDate(newDate));
			$.get('/day/side/' + newDate.toString('yyyy-MM-dd 00:00:00'), function(data){
				$('.categories_wrap').replaceWith(data);
				calculateMinD();
				$('#datepicker').datepicker('setDate',newDate);
			});
		},
        eventRender : function(calEvent, $event) {
			if (calEvent.readOnly == true) $event.addClass('readonly');
			if (calEvent.end.getTime() < new Date().getTime()) $event.addClass('past_event');	
			calEvent.outcome == true ? $event.addClass('outcome') : '';
			calEvent.complete == true ? $event.addClass('complete') : ''; 
			calculateMinD();
			
			if(calEvent.parent_id != null){
				$event.find('.wc-title').after('<div class="wc-outcome"></div>');
				$.get('/week/outcome/'+calEvent.parent_id,function(outcome){
					$event.find('.wc-outcome').html( '<span class="mini_target"></span>' + outcome );
				});
			}
			
				$.get('/week/group/'+calEvent._id,function(group){
					$event.find('.wc-title').after( group );
				});
			
      },
      draggable : function(calEvent, $event) {
		return calEvent.readOnly != true;
      },
      resizable : function(calEvent, $event) {
		return calEvent.readOnly != true;
      },
      eventDrop : function(calEvent, $event) {
		var start = db(calEvent.start);
		var end = db(calEvent.end);
		var taskId = calEvent._id;
		$.ajax({
			url: "/tasks/" +  taskId,
			type: 'PUT',
			data: $.param({task : { start: start, end: end, scheduled: 'true' }, nothing: 'true'})
		});
      },
      eventResize : function(calEvent, $event) {
		var min_duration = ((calEvent.end.getTime() - calEvent.start.getTime())/1000)/60;
		calEvent.min_duration = min_duration;
		var start = db(calEvent.start);
		var end = db(calEvent.end);
		var taskId = calEvent._id;
		$.ajax({
			url: "/tasks/" +  taskId,
			type: 'PUT',
			data: $.param({task : { start: start, end: end, min_duration: min_duration }, json: 'true'})
		});
		calculateMinD();
      },
      eventClick : function(calEvent, $event) {
		var start = ap(calEvent.start.getHours(),calEvent.start.getMinutes().toString());
		var end = ap(calEvent.end.getHours(),calEvent.end.getMinutes().toString());
		var date = day_names[calEvent.start.getDay()] + ' ' + month_names[calEvent.start.getMonth()] + ' ' + calEvent.start.getDate() + ', ' + calEvent.start.getFullYear();
		var dbStart = db(calEvent.start);
		var dbEnd = db(calEvent.end);
		var taskId = calEvent._id
		
		$('#edit_event .start').text(start);
		$('#edit_event .end').text(end);
		$('#edit_event .date').text(date);
		$('#edit_event .task_title').val(calEvent.title);
		$('#edit_event .task_dbstart').val(dbStart);
		$('#edit_event .task_dbend').val(dbEnd);
		$('#edit_event .task_id').val(taskId);
		$('#edit_event .group_id').val(calEvent.group_id);
		$('#edit_event .task_readonly').val(calEvent.readOnly);
		$('#edit_event .task_complete').val(calEvent.complete);
		calEvent.readOnly == true ? $('#edit_event #readonly_check').addClass('active') : $('#edit_event #readonly_check').removeClass('active');
		calEvent.complete == true ? $('#edit_event .checkbox').addClass('active') : $('#edit_event .checkbox').removeClass('active');
      },
      eventNew : function(calEvent, $event) {
		var start = ap(calEvent.start.getHours(),calEvent.start.getMinutes().toString());
		var end = ap(calEvent.end.getHours(),calEvent.end.getMinutes().toString());
		var date = day_names[calEvent.start.getDay()] + ' ' + month_names[calEvent.start.getMonth()] + ' ' + calEvent.start.getDate() + ', ' + calEvent.start.getFullYear();
		var dbStart = db(calEvent.start);
		var dbEnd = db(calEvent.end);
		var min_duration = ((calEvent.end.getTime() - calEvent.start.getTime())/1000)/60;
		
		$('#new_event .start').text(start);
		$('#new_event .end').text(end);
		$('#new_event .date').text(date);
		$('#new_event .task_min_duration').val(min_duration);
		$('#new_event .task_dbstart').val(dbStart);
		$('#new_event .task_dbend').val(dbEnd);
		
		$event.attr('rel','#new_event').cluetip({
			activation:  'click',
			local: true,
			leftOffset: 9,
			topOffset: 45,
			width: 300,
			onShow: function() {
				$(document).bind('mousedown',function(e) {
					var cluetipClick = $(e.target).closest('#cluetip');
					if ((cluetipClick.length === 0) || ($(e.target).hasClass('cancel_cluetip'))){ 
						$(document).trigger('hideCluetip');
						$('#schedule').weekCalendar('removeUnsavedEvents');
					}
				});
				
			}
		});
		$event.trigger('click');

      },
      eventMouseover : function(calEvent, $event) {
      },
      eventMouseout : function(calEvent, $event) {
      },
      noEvents : function() {
      },
      data : function(start, end, callback) {
		var start = db(start);
		var end = db(end);
		$.getJSON("/week/json/"+start+"/"+end, function(result) {

			callback(result);
			
   		});
      }
   });


	
	function db(date){
		var year = date.getFullYear();
		var month = date.getMonth() + 1;
			month = month.toString();
			month = (month.length == 1) ? '0'+month : month;
		var day = date.getDate().toString();
			day = (day.length == 1) ? '0'+day : day;
		var hour = date.getHours().toString();
			hour = (hour.length == 1) ? '0'+hour : hour;
		var minutes = date.getMinutes().toString();
			minutes = (minutes.length == 1) ? '0'+minutes : minutes;
		return year+'-'+month+'-'+day+' '+hour+':'+minutes+':00';
	}

	function ap(hours,minutes){
		var ap = (hours < 12) ? 'am' : 'pm';
		var hour = (hours > 12) ? hours - 12 : hours
		var hour = (hours == 0) ? 12 : hour
		var minute = (minutes.length == 1) ? ':0'+minutes : ':'+minutes;
		var minute = (minute == ':00') ? '' : minute;
		return hour+minute+ap;
	}

	function dbDate(date){
		var year = date.getFullYear();
		var month = date.getMonth() + 1;
			month = month.toString();
			month = (month.length == 1) ? '0'+month : month;
		var day = date.getDate().toString();
			day = (day.length == 1) ? '0'+day : day;
		return year+'-'+month+'-'+day;
	}

	var month_names = new Array ( );
	month_names[month_names.length] = "Jan";
	month_names[month_names.length] = "Feb";
	month_names[month_names.length] = "Mar";
	month_names[month_names.length] = "Apr";
	month_names[month_names.length] = "May";
	month_names[month_names.length] = "Jun";
	month_names[month_names.length] = "Jul";
	month_names[month_names.length] = "Aug";
	month_names[month_names.length] = "Sep";
	month_names[month_names.length] = "Oct";
	month_names[month_names.length] = "Nov";
	month_names[month_names.length] = "Dec";

	var day_names = new Array ( );
	day_names[day_names.length] = "Sunday";
	day_names[day_names.length] = "Monday";
	day_names[day_names.length] = "Tuesday";
	day_names[day_names.length] = "Wednesday";
	day_names[day_names.length] = "Thursday";
	day_names[day_names.length] = "Friday";
	day_names[day_names.length] = "Saturday";

	function calculateMinD(){
		var minD = 0;
		var minDTotal = 0;
		var serialized = $('#schedule').weekCalendar('serializeEvents');
		$(serialized).each(function(){
			if(this.complete == false){
				if(this.must == true || this.readOnly == true)  minD = this.min_duration + minD;
				minDTotal = this.min_duration + minDTotal;
			}
		});
		var hour = parseInt(minD/60).toString();
		var min = parseInt(minD%60).toString();
		hour = (hour.length == 1) ? '0'+hour : hour;
		min = (min.length == 1) ? '0'+min : min;
	
		var hourTotal = parseInt(minDTotal/60).toString();
		var minTotal = parseInt(minDTotal%60).toString();
		hourTotal = (hourTotal.length == 1) ? '0'+hourTotal : hourTotal;
		minTotal = (minTotal.length == 1) ? '0'+minTotal : minTotal;
	
		$('.must_wrap .time').text(hour+':'+min);
		$('.total_wrap .time').text(hourTotal+':'+minTotal);
	}

});